stages:
  Load_data:
    cmd: python src/load_data.py --config=params.yaml
    deps:
    - src/get_data.py
    - src/load_data.py
    - data_given/WineQua.csv
    outs:
    - data/raw/WineQua.csv

  Split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - data/raw/WineQua.csv
    - src/split_data.py    
    outs:
    - data/processed/train_winequality.csv
    - data/processed/test_winequality.csv  

  train_and_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps:    
    - src/train_and_evaluate.py
    - data/processed/train_winequality.csv
    - data/processed/test_winequality.csv  
    params:
    - estimators.ElasticNet.params.alpha
    - estimators.ElasticNet.params.l1_ratio
    # metrics:
    # - report/score.json:
    #     cache: false
    #   report/params.json:
    #     cache: false  
    # outs:
    # - saved_models/model.joblib

    #For MLFLOW Configuration
    # log_production_model:
    # cmd: python src/log_production_model.py --config=params.yaml
    # deps:
    # - src/log_production_model.py




    